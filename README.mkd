# README

crctk is a program for checking the integrity of files using the CRC32
checksum algorithm and generating CRC32 checksum data. The CRC32
checksums can be input and output in various ways.

Similar to tools like sha1sum(1), md5sum(1) and others, *crctk* is also
used to create database files containing mappings from filepaths to
checksums, which can be used later on to verify a batch of files. crctk
offers functionality to work with such files.

Because of their short length, it is common for CRC32 checksums to be
included as hexadecimal strings in the filename of a _FILE_. Such tags
are known to crctk as matching the regular expression
__[[:punct:]]\\?[[:xdigit:]]\\{8\\}[[:punct:]]\\?__, that is a
hexadecimal string optionally surrounded by punctuation characters,
including brackets (example: [11FFAABB]). crctk can be used to manage
such tags: it can tag files, update tags and use the CRC32 information
from tags to validate a file.

## Command line synopsis

More concise usage information.

```
crctk - CRC32 Hexstring Toolkit
Copyright (C) 2014 Jens Oliver John <dev@2ion.de>
Usage: ./src/crctk [-acCdDehmnopPqrRstvVx] <file>|<file-listing>
Options:
 -a, --append      Supplements -C, -m. Append to DB-FILE
 -c, --calc        Compute the CRC32 for the given file
 -C, --create-db   DB-FILE. For multiple input files, create a checksum
                   database overwriting any existing file
 -d, --delete      DB-FILE. Delete all given paths from the database
 -D, --dot         INT. Supplements -t. Insert the tag in front of the INTth
                   dot in the filename. Negative indices address the INTth last dot.
 -e, --tag-regex   EXPR. Affects -s, -r. Set the regex for matching tags
 -m, --merge       DB-FILE. Merges all given databases into DB-FILE.
                   Duplicate records subsequently overwrite each other
 -n, --numerical   Supplements -c, -X. Use decimal CRC32 checksums
 -o, --colors      Toggle coloured output. Alternatively, define the
                   CRCTK_ENABLE_COLORS environment variable.
 -p, --print       Print the contents of any given database
 -P, --to-realpath Convert paths in given databases to absolute paths
 -q, --quiet       Suppress all text output
 -r, --remove-tag  Remove any tags from the given files
 -R, --realpath    Supplements -C, -m, -p. Use absolute file paths
 -s, --strip-tag   Supplements -t. Replace any existing tag
 -t, --tag         Add a CRC32 hexstring tag to each given filename
 -v, --verify      Compute CRC32 and compare with the hexstring
                   in the supplied filename
 -V, --verify-db   DB-FILE. Check whether the files record in the
                   database still have the same CRC32 checksums
 -X, --verify-hex  INT. Check if the specified files match the given
                   CRC32 code INT. If --numerical was specified, expects
                   a base 16 number, otherwise a base 10 number
 -x, --hexstring   Supplements -V, -C. For any tagged file, use the
                   hexstring as the reference CRC32

 -h, --help        Print this message and exit
 --version         Print the program version and compilation date
```

## Compilation and installation

You need:

- GNU autoconf and automake (for the build system)
- gcc and g++
- libkyotocabinet
- libxdgbasedir
- libncurses or libncursesw (for ncrctk only)

On Debian, these may be installed using
```sh
sudo apt-get install libkyotocabinet-dev zlib1g-dev libncursesw5-dev gcc g++ libxdg-basedir-dev
```

crctk uses the GNU autotools for building so you go through the familiar
steps:

```sh
./configure --prefix=/your/chosen/prefix/path
make
sudo make install-strip
```

## Releases

Stable releases are tagged in Git. The last stable release is [version
0.4.10](https://github.com/2ion/crctk/releases/tag/0.4.9). 

In the additon to the CLI binary crctk, a ncurses-based interface is
also in the workings. Its binary is named ncrctk and getting installed
alongside the basic crctk. It still is in alpha status, but certain
functionality may already be available. The goal is to get to feature
parity with the CLI. Both binaries are going to share large parts of the source
code.

## Documentation

The documentation is written in pandoc markdown and located in /doc, so
you can build a wide range of documentation formats! By default, we
deliver HTML and man page versions.

You can browse the HTML documentation [here](https://2ion.github.io/crctk).

## NCurses interface synopsis

The interface is self-documenting, displaying keymaps where necessary. A
rough, and possibly out-of-date impression:

![Screenshot](https://raw.githubusercontent.com/2ion/crctk/master/README-resources/screenshot-cursesui.png)

## License

This program is licensed under the GNU General Public License v3 or
later. Parts of it are borrowed from the ncmpcpp project which are
licensed under the GNU General Public License v3 or later:

```
crctk - CRC32 Hexstring Toolkit
Copyright (C) 2014 Jens Oliver John <dev@2ion.de>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
```

```
Copyright (C) 2008-2012 by Andrzej Rybczak                            
electricityispower@gmail.com                                          
                                                                      
This program is free software; you can redistribute it and/or modify  
it under the terms of the GNU General Public License as published by  
the Free Software Foundation; either version 2 of the License, or     
(at your option) any later version.                                   
                                                                      
This program is distributed in the hope that it will be useful,       
but WITHOUT ANY WARRANTY; without even the implied warranty of        
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         
GNU General Public License for more details.                          
                                                                      
You should have received a copy of the GNU General Public License     
along with this program; if not, write to the                         
Free Software Foundation, Inc.,                                       
51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.              
```
